{
    "openapi": "3.0.2",
    "info": {
    "title": "FastAPI",
    "version": "0.1.0"
    },
    "paths": {
    "/api/health": {
    "get": {
    "summary": "Healthy Condition",
    "operationId": "healthy_condition_api_health_get",
    "responses": {
    "200": {
    "description": "Successful Response",
    "content": {
    "application/json": {
    "schema": {}
    }
    }
    }
    }
    }
    },
    "/api/highlights": {
    "post": {
    "tags": [
    "highlight"
    ],
    "summary": "Create Upload File",
    "operationId": "create_upload_file_api_highlights_post",
    "requestBody": {
    "content": {
    "multipart/form-data": {
    "schema": {
    "$ref": "#/components/schemas/Body_create_upload_file_api_highlights_post"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "Successful Response",
    "content": {
    "application/json": {
    "schema": {}
    }
    }
    },
    "422": {
    "description": "Validation Error",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/HTTPValidationError"
    }
    }
    }
    }
    }
    }
    },
    "/api/users/": {
    "get": {
    "tags": [
    "users"
    ],
    "summary": "Get User All",
    "operationId": "get_user_all_api_users__get",
    "responses": {
    "200": {
    "description": "Successful Response",
    "content": {
    "application/json": {
    "schema": {
    "title": "Response Get User All Api Users  Get",
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/UserOut"
    }
    }
    }
    }
    }
    },
    "security": [
    {
    "OAuth2PasswordBearer": []
    }
    ]
    },
    "post": {
    "tags": [
    "users"
    ],
    "summary": "Create User",
    "operationId": "create_user_api_users__post",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/UserCreate"
    }
    }
    },
    "required": true
    },
    "responses": {
    "201": {
    "description": "Successful Response",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/UserOut"
    }
    }
    }
    },
    "422": {
    "description": "Validation Error",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/HTTPValidationError"
    }
    }
    }
    }
    }
    }
    },
    "/api/users/{id}": {
    "get": {
    "tags": [
    "users"
    ],
    "summary": "Get User",
    "operationId": "get_user_api_users__id__get",
    "parameters": [
    {
    "required": true,
    "schema": {
    "title": "Id",
    "type": "integer"
    },
    "name": "id",
    "in": "path"
    }
    ],
    "responses": {
    "200": {
    "description": "Successful Response",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/UserOut"
    }
    }
    }
    },
    "422": {
    "description": "Validation Error",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/HTTPValidationError"
    }
    }
    }
    }
    },
    "security": [
    {
    "OAuth2PasswordBearer": []
    }
    ]
    },
    "delete": {
    "tags": [
    "users"
    ],
    "summary": "Delete Product",
    "operationId": "delete_product_api_users__id__delete",
    "parameters": [
    {
    "required": true,
    "schema": {
    "title": "Id",
    "type": "integer"
    },
    "name": "id",
    "in": "path"
    }
    ],
    "responses": {
    "204": {
    "description": "Successful Response"
    },
    "422": {
    "description": "Validation Error",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/HTTPValidationError"
    }
    }
    }
    }
    },
    "security": [
    {
    "OAuth2PasswordBearer": []
    }
    ]
    }
    },
    "/api/users/edit": {
    "put": {
    "tags": [
    "users"
    ],
    "summary": "Change Password",
    "operationId": "change_password_api_users_edit_put",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/UpdatePassword"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "Successful Response",
    "content": {
    "application/json": {
    "schema": {}
    }
    }
    },
    "422": {
    "description": "Validation Error",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/HTTPValidationError"
    }
    }
    }
    }
    },
    "security": [
    {
    "OAuth2PasswordBearer": []
    }
    ]
    }
    },
    "/api/login": {
    "post": {
    "tags": [
    "Auth"
    ],
    "summary": "Create User",
    "operationId": "create_user_api_login_post",
    "requestBody": {
    "content": {
    "application/x-www-form-urlencoded": {
    "schema": {
    "$ref": "#/components/schemas/Body_create_user_api_login_post"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "Successful Response",
    "content": {
    "application/json": {
    "schema": {}
    }
    }
    },
    "422": {
    "description": "Validation Error",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/HTTPValidationError"
    }
    }
    }
    }
    }
    }
    }
    },
    "components": {
    "schemas": {
    "Body_create_upload_file_api_highlights_post": {
    "title": "Body_create_upload_file_api_highlights_post",
    "required": [
    "file"
    ],
    "type": "object",
    "properties": {
    "file": {
    "title": "File",
    "type": "string",
    "format": "binary"
    }
    }
    },
    "Body_create_user_api_login_post": {
    "title": "Body_create_user_api_login_post",
    "required": [
    "username",
    "password"
    ],
    "type": "object",
    "properties": {
    "grant_type": {
    "title": "Grant Type",
    "pattern": "password",
    "type": "string"
    },
    "username": {
    "title": "Username",
    "type": "string"
    },
    "password": {
    "title": "Password",
    "type": "string"
    },
    "scope": {
    "title": "Scope",
    "type": "string",
    "default": ""
    },
    "client_id": {
    "title": "Client Id",
    "type": "string"
    },
    "client_secret": {
    "title": "Client Secret",
    "type": "string"
    }
    }
    },
    "HTTPValidationError": {
    "title": "HTTPValidationError",
    "type": "object",
    "properties": {
    "detail": {
    "title": "Detail",
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ValidationError"
    }
    }
    }
    },
    "UpdatePassword": {
    "title": "UpdatePassword",
    "required": [
    "actual_password",
    "new_password"
    ],
    "type": "object",
    "properties": {
    "actual_password": {
    "title": "Actual Password",
    "type": "string"
    },
    "new_password": {
    "title": "New Password",
    "type": "string"
    }
    }
    },
    "UserCreate": {
    "title": "UserCreate",
    "required": [
    "username",
    "email",
    "password"
    ],
    "type": "object",
    "properties": {
    "username": {
    "title": "Username",
    "type": "string"
    },
    "email": {
    "title": "Email",
    "type": "string",
    "format": "email"
    },
    "password": {
    "title": "Password",
    "type": "string"
    }
    }
    },
    "UserOut": {
    "title": "UserOut",
    "required": [
    "id",
    "username",
    "email",
    "created_at"
    ],
    "type": "object",
    "properties": {
    "id": {
    "title": "Id",
    "type": "integer"
    },
    "username": {
    "title": "Username",
    "type": "string"
    },
    "email": {
    "title": "Email",
    "type": "string",
    "format": "email"
    },
    "created_at": {
    "title": "Created At",
    "type": "string",
    "format": "date-time"
    }
    }
    },
    "ValidationError": {
    "title": "ValidationError",
    "required": [
    "loc",
    "msg",
    "type"
    ],
    "type": "object",
    "properties": {
    "loc": {
    "title": "Location",
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "msg": {
    "title": "Message",
    "type": "string"
    },
    "type": {
    "title": "Error Type",
    "type": "string"
    }
    }
    }
    },
    "securitySchemes": {
    "OAuth2PasswordBearer": {
    "type": "oauth2",
    "flows": {
    "password": {
    "scopes": {},
    "tokenUrl": "/api/login"
    }
    }
    }
    }
    }
    }